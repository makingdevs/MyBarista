import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'groovyx.android'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    signingConfigs {
        release {
            storeFile file(System.getenv("SIGNING_STORE_FILE") ?: System.getProperty("user.home"))
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }

    defaultConfig {
        applicationId "makingdevs.com.mybarista"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode getBuildVersionCode()
        versionName "1.6.8"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_SERVER_URL', urlApiServer
            signingConfig signingConfigs.release
        }

        debug {
            buildConfigField 'String', 'API_SERVER_URL', urlApiServer
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/services/org.codehaus.groovy.transform.ASTTransformation'
        exclude 'META-INF/services/org.codehaus.groovy.runtime.ExtensionModule'
    }
}

androidGroovy {
    options {
        configure(groovyOptions) {
            encoding = 'UTF-8'
            forkOptions.jvmArgs = ['-noverify'] // maybe necessary if you use Google Play Services
        }
        sourceCompatibility = '1.7'
        targetCompatibility = '1.7'
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'org.codehaus.groovy:groovy:2.4.7:grooid'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:support-v4:23.3.0'
    compile 'com.android.support:cardview-v7:23.3.0'
    compile 'com.akexorcist:RoundCornerProgressBar:2.0.3'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.android.gms:play-services-location:9.0.2'
    compile 'com.aurelhubert:ahbottomnavigation:1.3.0'
    compile 'com.android.support:multidex:1.0.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
        transitive = true
    }
    compile 'de.hdodenhof:circleimageview:2.1.0'
}

def API_SERVER_URL = '"'+ urlApiServer +'"' ?:'"Define una url"'

def getBuildVersionCode() {
    def date = new Date()
    def formattedDate = date.format('yyMMddHHss')
    formattedDate.toInteger()
}

task incrementVersionName << {
    def gradleFile = file("build.gradle")
    def versionNamePattern = Pattern.compile("versionName\\s*\"(.*?)\"")
    def gradleText = gradleFile.getText()
    def matcher = versionNamePattern.matcher(gradleText)
    matcher.find()
    def originalVersion = matcher.group(1)
    def finalVersion = versionName ?: "SNAPSHOT"
    System.out.println("Incrementing Version Name: " + originalVersion + " ==> " + finalVersion)
    def newGradleContent = gradleText.replaceAll("versionName\\s*\"(.*?)\"", "versionName \"" + finalVersion + "\"")
    gradleFile.write(newGradleContent)
}